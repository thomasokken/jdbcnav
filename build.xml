<!--
   JDBC Navigator - A Free Database Browser and Editor
   Copyright (C) 2001-2005  Thomas Okken
  
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License, version 2,
   as published by the Free Software Foundation.
  
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
  
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 -->
<project name="JDBC Navigator" default="compile" basedir=".">

  <!-- Location of the Rhino jar file -->
  <property name="rhino" location="${user.home}/.jars/js.jar"/>

  <!-- Build classes and copy anything else -->
  <!-- that needs to be in the class path   -->
  <target name="compile" depends="compile-boot,compile-main,compile-resources"/>

  <!-- Compile the first-stage boot loader, which creates a  -->
  <!-- custom class loader to load the remainder of the app, -->
  <!-- and also any JDBC drivers.                            -->
  <target name="compile-boot">
    <mkdir dir="classes"/>
    <!-- Our boot loader, including our "sneaky" class loader -->
    <javac source="1.4"
	   target="1.4"
	   srcdir="srcboot"
	   destdir="classes"
	   debug="on"
	   debuglevel="source,lines">
      <compilerarg value="-Xlint:deprecation"/>
      <!-- <compilerarg value="-Xlint:unchecked"/> -->
    </javac>
  </target>

  <!-- Compile the app, with classes hidden away in a bogus "foo" -->
  <!-- directory, where only our "sneaky" class loader (and the   -->
  <!-- "smalljar" target!) know to look...                        -->
  <target name="compile-main">
    <mkdir dir="classes/foo"/>
    <javac source="1.4"
	   target="1.4"
	   srcdir="src"
	   destdir="classes/foo"
	   debug="on"
	   debuglevel="source,lines">
      <compilerarg value="-Xlint:deprecation"/>
      <!-- <compilerarg value="-Xlint:unchecked"/> -->
    </javac>
  </target>

  <!-- Compile miscellaneous non-class resources:       -->
  <!-- Build number, time stamp, and pretty picture,    -->
  <!-- all for our cute and informational splash screen -->
  <target name="compile-resources">
    <mkdir dir="classes/foo"/>
    <buildnumber file="build.number"/>
    <tstamp>
      <format property="build.time" pattern="EEE MMM d HH:mm:ss z yyyy"/>
    </tstamp>
    <echo file="classes/foo/jdbcnav/VERSION"
          message="Build ${build.number}, ${build.time}"/>
    <copy todir="classes/foo/jdbcnav/images">
      <fileset dir="images"/>
    </copy>
  </target>

  <!-- Generate Javadoc documentation -->
  <target name="javadoc">
    <javadoc sourcepath="src:srcboot"
	     packagenames="jdbcnav.*,jdbcnavboot.*"
	     source="1.4"
	     destdir="javadoc"
	     windowtitle="JDBC Navigator">
      <link href="file:///opt/java/jdk1.5.0_05/docs/api"/>
      <link href="file:///home/thomas/rhino1_5R5/docs/apidocs"/>
    </javadoc>
  </target>

  <!-- Make stand-alone jar file for binary distributions -->
  <target name="jar" depends="compile-boot,compile-main,compile-resources">
    <unjar src="${rhino}" dest="classes"/>
    <jar destfile="jdbcnav.jar" basedir="classes">
      <manifest>
        <attribute name="Main-Class" value="jdbcnavboot.Boot"/>
      </manifest>
    </jar>
  </target>

  <!-- Make small jar file for binary distributions.             -->
  <!-- This cannot be run using "java -jar", and it needs js.jar -->
  <!-- (Rhino) and all JDBC drivers to be in the classpath.      -->
  <target name="smalljar" depends="compile-main,compile-resources">
    <jar destfile="jdbcnav-small.jar" basedir="classes/foo"/>
  </target>

  <!-- Make tarball for source distributions -->
  <target name="tarball">
    <tar destfile="jdbcnav.tgz"
         compression="gzip"
	 basedir=".."
	 includes="jdbcnav/**"
	 excludes="jdbcnav/classes/**,jdbcnav/javadoc/**,jdbcnav/jdbcnav.jar,jdbcnav/jdbcnav.tgz">
    </tar>
  </target>

  <!-- Delete everything generated by all the above targets -->
  <target name="clean">
    <delete includeEmptyDirs="true" quiet="true">
      <fileset dir="classes"/>
      <fileset dir="javadoc"/>
      <fileset file="jdbcnav.jar"/>
      <fileset file="jdbcnav-small.jar"/>
      <fileset file="jdbcnav.tgz"/>
    </delete>
  </target>
</project>
