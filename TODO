When MemoryMonitor notices that memory is getting low, in addition to showing a
warning dialog, it should also pause in-progress table loads. Without this, the
low-memory warning may be useless, because a table loading thread may overflow
memory before the user even has time to react to the low-memory warning.
(For now, at least MemoryMonitor could be useful for diagnosing whether certain
problems (flaky table loads?) are due to memory shortages or not.

Script generation from file data source is broken: column types are printed as
'null'. Something missing in the XML files?

Revisit BLOB/BINARY handling: does it work correctly with MySQL and Transbase?
Also, revisit the BIT (bit array) type in PostgreSQL. Would be nice if that
were handled in a manner compatible with Transbase's BITS/BITS2 types.

It would be nice to get rid of the JDBC Navigator clipboard, and use the system
clipboard throughout. Since the system clipboard does not support content
change notifications, only flavor change notifications, this means some work
wrt updating the enabled/disabled state of "Paste" commands. Also, it begs the
question how to support "grid" data for import/export.

When opening multiple table editing windows at the same time, and one or more
of them are for tables containing Oracle LONG or LONG RAW columns, the
exception "Stream has already been closed" may occur, or the application may
freeze completely. To avoid this, you must always open tables containing LONG
or LONG RAW columns separately. It would be nice if JDBC Navigator would load
such tables separately automagically; this will require (1) a new Table
property mustBeLoadedSeparately, plus (2) code in BasicDatabase and
JDBCDatabase to load such tables serially (the easiest approach would be to
load them first, before opening all the remaining windows; this will require
a mechanism whereby the Database can keep track of whether any loads are still
in progress). Of course this also affects other tables that might be opened
while a background load of a LONG-containing table is in progress; the solution
will probably have to be something along the lines of a queue.

"Set Password" should make the user type the password twice if it doesn't match
any of the existing ones (i.e., if it does not successfully decrypt any
encypted connection configs) -- because that means it's a new password, and
there's otherwise the danger that the user could accidentally encrypt all his
connection configs using a mistyped password.

Loading large queries can cause OutOfMemoryError. These should be caught and a
message displayed to the user. (Currently, all that happens is a message being
printed on standard error by the JVM, where most users will never see it; this
means that the user can't tell the difference between an operation that failed
because it ran out of memory and an operation that is simply taking very long.)
Apart from better user feedback, another reason for catching this error is to
prevent the AWT event thread from dying.

Hourglass cursor for slow operations that block the UI. Maybe also use Windows-
style "hourglass+arrow" cursor for QueryResultFrame while query is in progess.

Progress dialog for Generate Script.

BFILE: it would be nice if we could use Edit Cell to look at the contents of
the referenced file. Note that you cannot save data *to* a BFILE, so there
should be no "Apply to table" option in this case.

Make "Reload Tree", "Clear Cache", and "Remove Orphans" scriptable, so that
you can mix the SQL embedding and the JDBCNav functionality in one script --
this could be useful for testing etc.

Add option to Preferences to suppress the splash screen on startup.
