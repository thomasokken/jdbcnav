Scenario: open SmallSQL connection, open SQL window, create a table, then do
"Reload Tree". An NPE gets thrown; expanding the "Table" node does not work.

When a window is closed using Ctrl-W, and it closes without first popping up a
confirmation dialog, then the next underlying window is selected (as it should
be) but it does *not* appear to get the keyboard focus: typing goes nowhere,
and closing this next window with Ctrl-W does not work.
My suspicion is a Swing bug, where the keyboard focus ends up in limbo because
the window close sequence takes place while handling a keystroke. Perhaps the
focus stays on the window that just closed -- I have seen something like that
while working on the OnTrac GUI. Using JProbe this is relatively easy to debug;
lacking that, need to find out where the focus is at somehow.
There is a test case in jdbcnav/junk/FocusTest.java. Note that simply calling
dispose() in the Ctrl-W handler does not work *at all* (next window isn't even
selected!), which means that my JInternalFrame.setDefaultCloseAction() bug
report should really have been about JInternalFrame.dispose()... But even if I
work around that by calling doDefaultCloseAction() myself, the focus still goes
nowhere.

Change window placement code so that windows are always entirely on-screen. The
current behavior is annoying when opening large tables, since such windows are
typically the size of the entire screen, so you always have to move (or zoom)
them before you can use them.

The Windows menu can become too long; should use MenuLayout or some variation
thereof to make it switch to multiple-column mode if necessary.

Oracle INTERVAL type support

Hourglass cursor for windows where long queries are in progress? Use
hourglass+arrow or hourglass+I-beam cursors, like the ones Windows uses to
indicate a slow operation is in progress AND the UI is still active.

MySQL support
